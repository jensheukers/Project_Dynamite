/**
*	Filename: sprite.h
*
*	Description: Main header for Sprite Component, Texture has to be generated by the renderer
*
*	Version: 1/11/2018
*
*	© 2018, Jens Heukers
*/


#pragma once
#include "component.h"
#include "../math/vector2.h"
#include "../resourcemanager.h"
#include "../renderer.h"
#include "../texture.h"
#include "../core.h"

class Sprite : public Component {
private:
	/// @brief the path to the texture (in system)
	const char* texturePath;

	/// @brief the texture pointer
	Texture* texture;

	/// @brief structure containing all the UV Data
	UVData uvData;
public:
	/**
	* Default Constructor
	*/
	Sprite() { this->typeName = typeid(*this).name(); this->texture = nullptr; this->uvData = UVData(); };

	/**
	* Returns the surface if found, returns nullptr if failed
	*/
	Texture* GetTexture();
	
	/**
	* Creates a new surface, by getting texture data from ResourceManager
	*/
	void SetTexture(std::string path);

	/**
	* Creates a new surface, by creating a new texture in ResourceManager
	*/
	void CreateTexture(std::string path);

	/**
	* Returns the surface Path
	*/
	const char* GetSurfacePath();

	/**
	* Returns the UV Data
	*/
	UVData GetUVData();

	/**
	* Sets the UV Data
	*/
	void SetUVData(UVData data);

	/**
	* Copy constructor
	*/
	Component* Copy();

	/**
	* Called when the component gets loaded
	*/
	void OnLoad(const char* data);
};